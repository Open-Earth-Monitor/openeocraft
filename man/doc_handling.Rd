% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc-openeo_v1.R, R/doc.R
\name{doc_wellknown.openeo_v1}
\alias{doc_wellknown.openeo_v1}
\alias{doc_landing_page.openeo_v1}
\alias{doc_processes.openeo_v1}
\alias{doc_conformance.openeo_v1}
\alias{doc_handling}
\alias{doc_wellknown}
\alias{doc_landing_page}
\alias{doc_conformance}
\alias{doc_processes}
\alias{doc_collections}
\alias{doc_collection}
\alias{doc_items}
\alias{doc_item}
\alias{doc_search}
\title{Create response document}
\usage{
\method{doc_wellknown}{openeo_v1}(api, req)

\method{doc_landing_page}{openeo_v1}(api, req)

\method{doc_processes}{openeo_v1}(api, req)

\method{doc_conformance}{openeo_v1}(api, req)

doc_wellknown(api, req)

doc_landing_page(api, req)

doc_conformance(api, req)

doc_processes(api, req)

doc_collections(api, req)

doc_collection(api, req, collection_id)

doc_items(api, req, collection_id, limit, bbox, datetime, page)

doc_item(api, req, collection_id, item_id)

doc_search(api, req, limit, bbox, datetime, intersects, ids, collections, page)
}
\arguments{
\item{api}{An object representing the API.}

\item{req}{The request object from the \code{plumber} package,
containing information about the HTTP request made to the
API endpoint.}

\item{collection_id}{The identifier of the collection. This
parameter specifies which collection the request is targeting.}

\item{limit}{The maximum number of items to return. If not
specified, the default value is used.}

\item{bbox}{The bounding box for spatial filtering, specified
as a numeric vector of four coordinates
(\code{long_min}, \code{lat_min}, \code{long_max}, \code{lat_max}). Use
\code{deparse_array()} to convert it to comma-separated string.}

\item{datetime}{The temporal filter for items. It must be
specified as a
\code{list(start = start_date, end = end_date, exact = exact_date)}
object. Use \code{deparse_datetime()} function to convert this
object to a STAC datetime string.}

\item{page}{The page number of the results when paginating.}

\item{item_id}{The identifier of the item within the specified
collection. This parameter specifies which item the request
is targeting.}

\item{intersects}{The spatial filter for items, specified as
a GeoJSON geometry object representing the area of interest.
Use \code{deparse_json()} function to convert the GeoJSON
geometry list into a GeoJSON string.}

\item{ids}{A list of item identifiers to filter the search
results. Use \code{deparse_array()} to convert it to a comma-
separated string.}

\item{collections}{A list of collection identifiers to filter
the search results. Use \code{deparse_array()} to convert it to a
comma-separated string.}
}
\value{
For API creation functions, returns a api object.
For API handling functions, returns the document to return
as response.
}
\description{
These are functions responsible for creating the document of the
API endpoint response. It uses the \code{api} and the \code{req} objects
to make documents to be send as response to the user. It does
this process by dispatching to specific API implementations.
}
\details{
\itemize{

\item \code{doc_landing_page}: Creates document as a response to
\code{/} endpoint.

\item \code{doc_conformance}: Creates document as a response to
\verb{/conformance} endpoint.

\item \code{doc_collections}: Creates document as a response to
\verb{/collections} endpoint.

\item \code{doc_collection}: Creates document as a response to
\verb{/collection/\{collection_id\}} endpoint.

\item \code{doc_items}: Creates document as a response to
\verb{/collection/\{collection_id\}/items} endpoint.

\item \code{doc_item}: Creates document as a response to
\verb{/collection/\{collection_id\}/item/\{item_id\}} endpoint.

\item \code{doc_search}: Creates document as a response to
\verb{/search} endpoint.

}
}
\references{
For more information about the STAC specification,
see: \url{https://stacspec.org/}

For more information about the OGC API specification,
see: \url{http://www.opengis.net/doc/IS/ogcapi-features-1/1.0}
}
\seealso{
\code{\link[=deparse_array]{deparse_array()}}, \code{\link[=deparse_datetime]{deparse_datetime()}}, \code{\link[=deparse_json]{deparse_json()}}
}
